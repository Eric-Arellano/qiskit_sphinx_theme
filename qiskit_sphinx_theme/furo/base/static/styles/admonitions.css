/** This file uses Carbon for icons and "admonitions" (e.g. warning boxes). See:
*  - https://carbondesignsystem.com/guidelines/icons/library/
*  - https://carbondesignsystem.com/components/notification/style/
*  - https://carbondesignsystem.com/guidelines/color/usage
*/

body {
    /* We only override icons for what we use. Others get turned off by e.g. our "admonitions"
    *  CSS rules. To use an icon, download it from the Carbon website and format it to one line.*/
    --icon-search: url('data:image/svg+xml;charset=utf-8,<svg id="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><defs><style>.cls-1 {fill: none;}</style></defs><path d="M29,27.5859l-7.5521-7.5521a11.0177,11.0177,0,1,0-1.4141,1.4141L27.5859,29ZM4,13a9,9,0,1,1,9,9A9.01,9.01,0,0,1,4,13Z" transform="translate(0 0)"/><rect id="_Transparent_Rectangle_" data-name="&lt;Transparent Rectangle&gt;" class="cls-1" width="32" height="32"/></svg>');
    --icon-info: url('data:image/svg+xml;charset=utf-8,<svg id="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><defs><style>.cls-1 {fill: none;}</style></defs><path id="inner-path" class="cls-1" d="M16,8a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,16,8Zm4,13.875H17.125v-8H13v2.25h1.875v5.75H12v2.25h8Z" transform="translate(0 0)"/><path d="M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm0,6a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,16,8Zm4,16.125H12v-2.25h2.875v-5.75H13v-2.25h4.125v8H20Z" transform="translate(0 0)"/><rect id="_Transparent_Rectangle_" data-name="&lt;Transparent Rectangle&gt;" class="cls-1" width="32" height="32"/></svg>');
    /* We manually set the CSS classes `st1` and `st2` to the colors for warnings. See the
    *  admonitions section for an explanation of why. */
    --icon-warning: url('data:image/svg+xml;charset=utf-8,<svg version="1.1" id="icon" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 32 32" style="enable-background:new 0 0 32 32;" xml:space="preserve"><style type="text/css">.st0{fill:none;}.st1{fill:%23f1c21b;}.st2{fill:black;}</style><rect id="Transparent_Rectangle" class="st0" width="32" height="32"/><path id="Compound_Path" class="st1" d="M16,2C8.3,2,2,8.3,2,16s6.3,14,14,14s14-6.3,14-14C30,8.3,23.7,2,16,2z M14.9,8h2.2v11h-2.2V8z M16,25c-0.8,0-1.5-0.7-1.5-1.5S15.2,22,16,22c0.8,0,1.5,0.7,1.5,1.5S16.8,25,16,25z"/><path id="inner-path" class="st2" d="M17.5,23.5c0,0.8-0.7,1.5-1.5,1.5c-0.8,0-1.5-0.7-1.5-1.5S15.2,22,16,22C16.8,22,17.5,22.7,17.5,23.5z M17.1,8h-2.2v11h2.2V8z"/></svg>');
    --icon-failure: url('data:image/svg+xml;charset=utf-8,<svg id="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><defs><style>.cls-1 {fill: none;}</style></defs><rect id="inner-path" class="cls-1" x="14.9004" y="7.2004" width="2.1996" height="17.5994" transform="translate(-6.6275 16.0001) rotate(-45)"/><path d="M16,2A13.914,13.914,0,0,0,2,16,13.914,13.914,0,0,0,16,30,13.914,13.914,0,0,0,30,16,13.914,13.914,0,0,0,16,2Zm5.4449,21L9,10.5557,10.5557,9,23,21.4448Z"/><rect id="_Transparent_Rectangle_" data-name="&lt;Transparent Rectangle&gt;" class="cls-1" width="32" height="32"/></svg>');

    /* Note that we don't use the Success admonition in our theme. */
    --qiskit-color-admonition-info--background: #edf5ff;
    --qiskit-color-admonition-info--border: #0043ce;
    --qiskit-color-admonition-warning--background: #fcf4d6;
    --qiskit-color-admonition-warning--border: #f1c21b;
    --qiskit-color-admonition-error--background: #fff1f1;
    --qiskit-color-admonition-error--border: #da1e28;
}

.topic {
  border: 1px solid var(--qiskit-color-admonition-info--background);
}

/* Admonitions are complex because they use a 3px left border with a different color than the rest
*  of the div. If we naively used `border-left`, we'd end up with a weird-looking diagonal, as
*  described at
*  https://stackoverflow.com/questions/18129718/weird-css-behavior-diagonal-border-why-is-the-border-edge-not-straight.
*  So, instead, we use `.admonition:before` to set up the left border.
*
*  We don't specify the border colors or the `background` for `.admonition:before` because each
*  specific admonition type will set them. We also don't set a border-top because we expect the
*  border color to be the same as the top's background. */
.admonition {
  border-left: 0;  /* Turn off Furo's border. */
  border-right-style: solid;
  border-right-width: 1px;
  border-bottom-style: solid;
  border-bottom-width: 1px;
  position: relative;
  padding-left: 12px;
}
.admonition:before {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 3px;
}

.admonition.attention > .admonition-title:before,
.admonition.caution > .admonition-title:before,
.admonition.important > .admonition-title:before,
.admonition.warning > .admonition-title:before {
  /* Rather than using mask-image like Furo normally does, we set `content` to the SVG. This is
  *  because Carbon requires that we have a black exclamation mark for accessibility: the
  *  light yellow background wouldn't be distinct enough compared to the dark yellow icon. Mask
  *  image doesn't let us set colors, only whether to use the background color of the underlying
  *  HTML element vs. use the background color of the SVG container. So, having a black exclamation
  *  mark would require setting the entire .admonition-title background color to black. */
  content: var(--icon-warning);
  -webkit-mask-image: unset;
  mask-image: unset;
  background-color: var(--qiskit-color-admonition-warning--background);
}
.admonition.attention > .admonition-title,
.admonition.caution > .admonition-title,
.admonition.important > .admonition-title,
.admonition.warning > .admonition-title {
  background-color: var(--qiskit-color-admonition-warning--background);
}
.admonition.attention,
.admonition.caution,
.admonition.important,
.admonition.warning {
  border-color: var(--qiskit-color-admonition-warning--background);
}
.admonition.attention:before,
.admonition.caution:before,
.admonition.important:before,
.admonition.warning:before {
  background: var(--qiskit-color-admonition-warning--border);
}

.admonition.danger > .admonition-title:before,
.admonition.error > .admonition-title:before {
  -webkit-mask-image: var(--icon-failure);
  mask-image: var(--icon-failure);
  background-color: var(--qiskit-color-admonition-error--border);
}
.admonition.danger > .admonition-title,
.admonition.error > .admonition-title {
  background-color: var(--qiskit-color-admonition-error--background);
}
.admonition.danger,
.admonition.error {
  border-color: var(--qiskit-color-admonition-error--background);
}
.admonition.danger:before,
.admonition.error:before {
  background: var(--qiskit-color-admonition-error--border);
}

.admonition > .admonition-title:before,
.admonition.hint > .admonition-title:before,
.admonition.note > .admonition-title:before,
.admonition.tip > .admonition-title:before,
p.topic-title:before {
  -webkit-mask-image: var(--icon-info);
  mask-image: var(--icon-info);
  background-color: var(--qiskit-color-admonition-info--border);
}
.admonition > .admonition-title,
.admonition.hint > .admonition-title,
.admonition.note > .admonition-title,
.admonition.tip > .admonition-title,
p.topic-title {
  background-color: var(--qiskit-color-admonition-info--background);
}
.admonition,
.admonition.hint,
.admonition.note,
.admonition.tip {
  border-color: var(--qiskit-color-admonition-info--background);
}
.admonition:before,
.admonition.hint:before,
.admonition.note:before,
.admonition.tip:before {
  background: var(--qiskit-color-admonition-info--border);
}
